// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Statistics.Data.EFCore;

#nullable disable

namespace Statistics.Data.EFCore.Migrations
{
    [DbContext(typeof(StatisticsDbContext))]
    partial class StatisticsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Statistics.Models.Personalities.PersonalityInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("SurveyStatisticsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SurveyStatisticsId");

                    b.ToTable("PersonalityInfo");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Options.CheckboxOptionAnswerStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnswersCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("CheckboxQuestionStatisticsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OptionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CheckboxQuestionStatisticsId");

                    b.ToTable("CheckboxOptionAnswerStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Options.RadioOptionAnswerStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnswersCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("OptionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RadioQuestionStatisticsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RadioQuestionStatisticsId");

                    b.ToTable("RadioOptionAnswerStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.BaseQuestionStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnswersCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<int>("QuestionType")
                        .HasColumnType("integer");

                    b.Property<Guid>("SurveyStatisticsId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SurveyStatisticsId");

                    b.ToTable("BaseQuestionStatistics");

                    b.HasDiscriminator<int>("QuestionType");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Surveys.SurveyStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AnswersCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("SurveyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("SurveyStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.CheckboxQuestionStatistics", b =>
                {
                    b.HasBaseType("Statistics.Models.Statistics.Questions.BaseQuestionStatistics");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.FileQuestionStatistics", b =>
                {
                    b.HasBaseType("Statistics.Models.Statistics.Questions.BaseQuestionStatistics");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.RadioQuestionStatistics", b =>
                {
                    b.HasBaseType("Statistics.Models.Statistics.Questions.BaseQuestionStatistics");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.RateQuestionStatistics", b =>
                {
                    b.HasBaseType("Statistics.Models.Statistics.Questions.BaseQuestionStatistics");

                    b.Property<double>("AverageRate")
                        .HasColumnType("double precision");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.ScaleQuestionStatistics", b =>
                {
                    b.HasBaseType("Statistics.Models.Statistics.Questions.BaseQuestionStatistics");

                    b.Property<double>("AverageScale")
                        .HasColumnType("double precision");

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.TextQuestionStatistics", b =>
                {
                    b.HasBaseType("Statistics.Models.Statistics.Questions.BaseQuestionStatistics");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("Statistics.Models.Personalities.PersonalityInfo", b =>
                {
                    b.HasOne("Statistics.Models.Statistics.Surveys.SurveyStatistics", "SurveyStatistics")
                        .WithMany("Personalities")
                        .HasForeignKey("SurveyStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Options.CheckboxOptionAnswerStatistics", b =>
                {
                    b.HasOne("Statistics.Models.Statistics.Questions.CheckboxQuestionStatistics", "CheckboxQuestionStatistics")
                        .WithMany("OptionsStatistics")
                        .HasForeignKey("CheckboxQuestionStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckboxQuestionStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Options.RadioOptionAnswerStatistics", b =>
                {
                    b.HasOne("Statistics.Models.Statistics.Questions.RadioQuestionStatistics", "CheckboxQuestionStatistics")
                        .WithMany("OptionsStatistics")
                        .HasForeignKey("RadioQuestionStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckboxQuestionStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.BaseQuestionStatistics", b =>
                {
                    b.HasOne("Statistics.Models.Statistics.Surveys.SurveyStatistics", "SurveyStatistics")
                        .WithMany("QuestionStatistics")
                        .HasForeignKey("SurveyStatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Surveys.SurveyStatistics", b =>
                {
                    b.Navigation("Personalities");

                    b.Navigation("QuestionStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.CheckboxQuestionStatistics", b =>
                {
                    b.Navigation("OptionsStatistics");
                });

            modelBuilder.Entity("Statistics.Models.Statistics.Questions.RadioQuestionStatistics", b =>
                {
                    b.Navigation("OptionsStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
